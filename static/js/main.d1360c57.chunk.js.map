{"version":3,"sources":["components/colorPicker/colorPicker.tsx","components/slider/slider.tsx","components/Css3D/Css3D.tsx","components/Css3D/Css3DVisualize.tsx","components/Css3D/Css3DPage.tsx","components/aStar/aStarPage.tsx","components/calendar/calender.tsx","components/calendar/calendarPage.tsx","components/snake/snakePage.tsx","components/colorPicker/colorPickerPage.tsx","components/home/home.tsx","components/intervalSlider/intervalSlider.tsx","components/intervalSlider/intervalSliderPage.tsx","components/rangeIntervalSlider/rangeIntervalSlider.tsx","components/rangeIntervalSlider/rangeIntervalSliderPage.tsx","components/rangeSlider/rangeSlider.tsx","components/rangeSlider/rangeSliderPage.tsx","components/slider/sliderPage.tsx","components/snake/snake.tsx","hooks/useKeyPress.tsx","components/yahtzee/yahtzeeUtil.ts","hooks/useLastKeyPress.tsx","components/timer/timerPage.tsx","components/yahtzee/dice.tsx","components/yahtzee/yahtzeeTable.tsx","components/yahtzee/yahtzeePage.tsx","App.tsx","index.tsx"],"names":["ColorChannel","Slider","props","sliderRef","useRef","useState","default","sliderPos","setSliderPos","useEffect","onChangePercentage","changeKnobPos","pointerPos","rect","current","getBoundingClientRect","x","left","right","width","ref","className","onPointerDown","e","pos","move","clientX","clientY","window","addEventListener","up","removeEventListener","onDown","sliderBarClass","sliderFillClass","style","sliderKnobClass","Css3D","id","perspective","perspectiveOrigin","perspectiveOriginY","transform","tableZ","tableRotateX","Array","fill","map","_","i","onClick","console","log","Css3DVisualize","borderTopWidth","borderBottomWidth","borderLeftWidth","Css3DPage","min","max","perspectiveRange","perspectiveOriginYRange","tableRotateRange","tableZRange","setPerspective","setPerspectiveOriginY","tableRotate","setTableRotate","setTableZ","onSlidePerspective","useCallback","percentage","onSlidePerspectiveOriginY","onSlideTableRotate","onSlideTableZ","size","AStarPage","start","goal","gridsLink","setGridsLink","blocks","setBlocks","aStarPath","setAStarPath","links","connection","isBlock","cell","includes","push","Math","abs","addBlock","newBlocks","slice","undefined","find","block","splice","findIndex","aStarProcessedPath","useMemo","length","calculateCostFrom","goalCell","currentCell","floor","openSet","costTo","costFrom","prevCell","closedSet","smallestCost","smallestCostSet","filter","cellInfo","randomIndex","random","unshift","neighbour","forEach","costToNeighbour","neighbourCellInfo","Object","assign","sort","cellInfoA","cellInfoB","path","prevCellInfo","error","checkClass","grid","gridTemplateColumns","gridTemplateRows","_e","bind","WEEKDAYS","from","_value","Calendar","year","calendar","getFullYear","month","getMonth","today","Date","getDate","daysInMonth","firstDayInWeek","getDay","calendarIndex","valueOf","onChangeMonth","weekday","_precede","day","nodeDate","nodeClass","textClass","selectedDaysValue","selectedDays","days","nodeSelectedIndex","indexOf","every","value","onChangeSelectedDay","CalendarPage","state","date","this","setState","onChangeDate","React","Component","DIRECTION","maxColors","R","G","B","ColorPicker","colorPickerPanelRef","maxColorPickerPanelRef","maxPickerPos","setMaxPickerPos","maxColor","setMaxColor","top","pickerPos","setPickerPos","color","setColor","getColorChannel","onChangeColor","rgb2hex","getMaxColorChannel","lerp","end","ratio","rgb","RR","toString","toUpperCase","padStart","GG","BB","channel","maxColor2White","finalColor","round","getInvertedColorChannel","indexLength","maxColorIndex","normalizedRatio","changePickerPos","y","bottom","changeMaxPickerPos","document","body","background","borderColor","ColorPickerPage","backgroundColor","Home","showList","setShowList","visibility","to","IntervalSlider","closest","intervals","IntervalSliderPage","number","onChangeNumber","RangeIntervalSlider","knobRef","minKnobPos","setminKnobPos","maxKnobPos","setmaxKnobPos","activeKnob","setActiveKnob","movingKnob","onChangeMin","onChangeMax","float2Decimal","decimal","parseFloat","toFixed","newPos","otherKnob","otherKnobRect","otherKnobPos","setKnobPos","changeKnob","allowOverlap","stopOnOverlap","movingKnobValue","otherKnobValue","barClass","barColor","fillColor","zIndex","minKnobClass","maxKnobClass","RangeIntervalSliderPage","RangeSlider","onChangeMinPercentage","onChangeMaxPercentage","RangeSliderPage","minPercentage","maxPercentage","SliderPage","Snake","bodyIndex","snake","coor","isHead","direction","isTarget","target","isBodyCorner","currIdx","prevPt","currPt","nextPt","col","row","_r","_c","j","useKeyPress","key","keyPressed","setKeyPressed","onUp","YAHTZEE_TYPE","SnakePage","cloneArray","originalArr","JSON","parse","stringify","snakeRef","setSnake","directionRef","RIGHT","setDirection","targetRef","setTarget","keyPressing","registerKeys","useLastKeyPress","stop","restart","gameInterval","scoreRef","score","setScore","speedRef","initSnake","newSnake","DOWN","UP","LEFT","generateTarget","startGame","ceil","stopGame","speed","clearInterval","setInterval","checkCollision","alert","checkEatTarget","head","newTarget","some","TimerPage","timer1Ref","timer2Ref","timer1","setTimer1","timer2","setTimer2","startTime","timer","currentTime","getHours","getMinutes","getSeconds","Value","Map","Dice","point","data-clickable","locked","_grid","get","red","dot","YahtzeeUtil","dices","points","set","keys","reduce","sum","combinations","THREE_OF_A_KIND","isThreeOfAKind","getSum","FOUR_OF_A_KIND","isFourOfAKind","FULL_HOUSE","isFullHouse","SMALL_STRAIGHT","isSmallStraight","LARGE_STRAIGHT","isLargeStraight","YAHTZEE","isYahtzee","CHANCE","values","counts","count","getDiceMap","dice","upperRows","name","type","ACES","TWOS","THREES","FOURS","FIVES","SIXS","lowerRows","YahtzeeTable","getCombinationValue","Infinity","getValue","getDisplay","onSelectRow","YAHTZEE_BONUS","prev","currPair","combinationMap","BONUS","YahtzeePage","rollingDiceRef","setDices","setCombinations","rolling","setRolling","rollCount","setRollCount","roundRunning","setRoundRunning","gameEnd","setGameEnd","rollingId","updateDices","randomDice","dicesClone","newPoint","stopRoll","upperSum","checkBonus","newCombination","diceMap","getPoints","getCombination","newDices","onLockDice","combination","_n","pair","App","navigate","useNavigate","location","useLocation","pathname","replace","element","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d1360c57.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport \"./colorPicker.css\";\n\nexport interface RGB {\n    R: number,\n    G: number,\n    B: number\n}\nexport enum ColorChannel { R = \"R\", G = \"G\", B = \"B\" }\nconst maxColors: Array<RGB> = [\n    { R: 255, G: 0, B: 0 },\n    { R: 255, G: 255, B: 0 },\n    { R: 0, G: 255, B: 0 },\n    { R: 0, G: 255, B: 255 },\n    { R: 0, G: 0, B: 255 },\n    { R: 255, G: 0, B: 255 },\n    { R: 255, G: 0, B: 0 },\n    { R: 255, G: 0, B: 0 }\n]\n\nexport const ColorPicker = (props: { size: number, onChangeColor: Function }) => {\n    let colorPickerPanelRef = useRef<HTMLDivElement>(null);\n    let maxColorPickerPanelRef = useRef<HTMLDivElement>(null);\n\n    let [maxPickerPos, setMaxPickerPos] = useState(0);\n    let [maxColor, setMaxColor] = useState<RGB>({ R:255, G: 0, B: 0 });\n    let [pickerPos, setPickerPos] = useState<{ left: number, top: number}>({ left: 0, top: 0 });\n    let [color, setColor] = useState<RGB>({ R: 0, G: 0, B: 0 });\n\n    useEffect(() => {\n        setColor({\n            R: getColorChannel(ColorChannel.R, maxColor),\n            G: getColorChannel(ColorChannel.G, maxColor),\n            B: getColorChannel(ColorChannel.B, maxColor)\n        })\n    }, [pickerPos, maxColor]);\n\n    useEffect(() => props.onChangeColor(rgb2hex(color)), [color]);\n\n    useEffect(() => {\n        setMaxColor({\n            R: getMaxColorChannel(ColorChannel.R),\n            G: getMaxColorChannel(ColorChannel.G),\n            B: getMaxColorChannel(ColorChannel.B)\n        })\n    }, [maxPickerPos]);\n\n    let lerp = (start: number, end: number, ratio: number) => {\n        return start + (ratio - 0) * (end - start) / (1 - 0);\n    }\n\n    let rgb2hex = (rgb: RGB): string => {\n        let RR = rgb.R.toString(16).toUpperCase().padStart(2, \"0\");\n        let GG = rgb.G.toString(16).toUpperCase().padStart(2, \"0\");\n        let BB = rgb.B.toString(16).toUpperCase().padStart(2, \"0\");\n        return `#${RR}${GG}${BB}`;\n    }\n\n    let getColorChannel = (channel: ColorChannel, maxColor: RGB) => {\n        let maxColor2White = lerp(255, maxColor[channel], pickerPos.left / props.size);\n        let finalColor = lerp(maxColor2White, 0, pickerPos.top / props.size);\n        return Math.round(finalColor);\n    }\n\n    let getInvertedColorChannel = (channel: ColorChannel, maxColor: RGB) => {\n        let maxColor2White = lerp(maxColor[channel], 255, pickerPos.left / props.size);\n        let finalColor = lerp(0, maxColor2White, pickerPos.top / props.size);\n        return Math.round(finalColor);\n    }\n\n    let getMaxColorChannel = (channel: ColorChannel) => {\n        let ratio: number = maxPickerPos / props.size;\n        let indexLength: number = 1 / (maxColors.length - 2);\n        let maxColorIndex = Math.floor(ratio / indexLength);\n        let normalizedRatio = ratio / indexLength - maxColorIndex;\n        let finalColor = lerp(maxColors[maxColorIndex][channel], maxColors[maxColorIndex + 1][channel], normalizedRatio);\n        return Math.round(finalColor);\n    }\n\n    let changePickerPos = (pointerPos: [number, number]) => {\n        let rect = colorPickerPanelRef.current!.getBoundingClientRect(); // get color picker global position\n        let [x, y] = pointerPos; // get pointer global position\n        // check overflow\n        if (x < rect.left) x = rect.left;\n        else if (x > rect.right) x = rect.right;\n        if (y < rect.top) y = rect.top;\n        else if (y > rect.bottom) y = rect.bottom;\n        setPickerPos({ left: x - rect.left, top: y - rect.top });\n    }\n\n    let changeMaxPickerPos = (pointerPos: [number, number]) => {\n        let rect = maxColorPickerPanelRef.current!.getBoundingClientRect(); // get color picker global position\n        let x = pointerPos[0]; // get pointer global position\n        // check overflow\n        if (x < rect.left) x = rect.left;\n        else if (x > rect.right) x = rect.right;\n        setMaxPickerPos(x - rect.left);\n    }\n\n    let onDown = (pointerPos: [number, number], changePickerPos: Function) => {\n        changePickerPos(pointerPos);\n        let move = (e: PointerEvent) => changePickerPos([e.clientX, e.clientY]);\n        let up = () => {\n            document.body.removeEventListener(\"pointermove\", move);\n            document.body.removeEventListener(\"pointerup\", up);\n        }\n        document.body.addEventListener(\"pointermove\", move);\n        document.body.addEventListener(\"pointerup\", up);\n    }\n\n    return (\n        <div className=\"color-picker\">\n            <div ref={ colorPickerPanelRef } className='color-picker-panel no_highlight' style={ {\n                width: `${props.size}px`,\n                background: `linear-gradient(#FFFFFF, #000000), linear-gradient(to right, #FFFFFF, ${rgb2hex(maxColor)})`\n            } } onPointerDown={ (e: React.PointerEvent<HTMLDivElement>) => onDown([e.clientX, e.clientY], changePickerPos) }>\n                <div className=\"color-picker-indicator no_highlight\" style={ { left: pickerPos.left, top: pickerPos.top, borderColor: `rgb(${getInvertedColorChannel(ColorChannel.R, maxColor)}, ${getInvertedColorChannel(ColorChannel.G, maxColor)}, ${getInvertedColorChannel(ColorChannel.B, maxColor)}` } }/>\n            </div>\n            <div ref={ maxColorPickerPanelRef } className=\"color-picker-max-color-selector\" onPointerDown={ (e: React.PointerEvent<HTMLDivElement>) => onDown([e.clientX, e.clientY], changeMaxPickerPos) }>\n                <div className=\"color-picker-max-color-picker\" style={ { left: maxPickerPos } }>\n                    <div />\n                    <div />\n                </div>\n            </div>\n        </div>\n    )\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport \"./slider.css\";\n\nexport const Slider = (props: { sliderBarClass: string, sliderFillClass: string, sliderKnobClass: string, onChangePercentage: Function, default?: number }) => {\n    let sliderRef = useRef<HTMLDivElement>(null);\n    let [sliderPos, setSliderPos] = useState(props.default || 0);\n\n    useEffect(() => props.onChangePercentage(sliderPos), [sliderPos]);\n\n    let changeKnobPos = (pointerPos: [number, number]) => {\n        let rect = sliderRef.current!.getBoundingClientRect(); // get color picker global position\n        let x = pointerPos[0]; // get pointer global position\n        // check overflow\n        if (x < rect.left) x = rect.left;\n        else if (x > rect.right) x = rect.right;\n        setSliderPos((x - rect.left) / rect.width);\n    }\n\n    let onDown = (pos: [number, number], changeKnobPos: Function) => {\n        changeKnobPos(pos);\n        let move = (e: PointerEvent) => changeKnobPos([e.clientX, e.clientY]);\n        let up = () => {\n            window.removeEventListener(\"pointermove\", move);\n            window.removeEventListener(\"pointerup\", up);\n        }\n        window.addEventListener(\"pointermove\", move);\n        window.addEventListener(\"pointerup\", up);\n    }\n\n    return (\n        <div ref={ sliderRef } className=\"slider no_highlight\"\n            onPointerDown={ (e: React.PointerEvent<HTMLDivElement>) => onDown([e.clientX, e.clientY], changeKnobPos) }>\n            <div className={ `slider-bar ${props.sliderBarClass}` }><div className={ `slider-fill ${props.sliderFillClass}` } style={ { width: `${sliderPos * 100}%` } } /></div>\n            <div className=\"slider-position\" style={ { left: `${sliderPos * 100}%` } }>\n                <div className={ `silder-knob ${props.sliderKnobClass}` } />\n            </div>\n        </div>\n    )\n}\n","import \"./Css3D.css\";\n\nexport const Css3D = (props: { perspective: number, perspectiveOriginY: number, tableRotateX: number, tableZ: number }) => {\n\n    // perspective defines the virtual distance between the plane of computer screen and the html element need to apply translateZ\n\n    return (\n        <div id=\"css-3d-camera\" style={ { perspective: `${props.perspective}px`, perspectiveOrigin: `center ${props.perspectiveOriginY}px` } }>\n            <div id=\"css-3d-space\">\n                <div id=\"css-3d-table\" style={ { transform: `translateZ(${props.tableZ}px) rotateX(${props.tableRotateX}deg)` } }>\n                    { Array(8).fill(null).map((_, i) =>\n                        <button onClick={ () => console.log(i + 1) }>{ i + 1 }</button>) }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import \"./Css3DVisualize.css\";\n\nexport const Css3DVisualize = (props: { perspective: number, perspectiveOriginY: number, tableRotateX: number, tableZ: number }) => {\n\n    return (\n        <div id=\"css-3d-visualize\">\n            <div id=\"css-3d-visualize-screen\" />\n            <div id=\"css-3d-visualize-viewcone\" style={ { borderTopWidth: `${100}px`, borderBottomWidth: `${100}px`, borderLeftWidth: `${props.perspective}px` } } />\n            <div id=\"css-3d-visualize-space\">\n                <div id=\"css-3d-visualize-table\" style={ { transform: `translate(${props.tableZ}px) rotateZ(${-props.tableRotateX}deg) ` } }/>\n            </div>\n        </div>\n    )\n\n}\n","import { useCallback, useState } from \"react\";\nimport { Slider } from \"../slider/slider\";\nimport { Css3D } from \"./Css3D\";\nimport \"./Css3DPage.css\";\nimport { Css3DVisualize } from \"./Css3DVisualize\";\n\nexport const Css3DPage = () => {\n\n    const [perspectiveRange, setPerspectiveRange] = useState({ min: 1, max: 500 });\n    const [perspectiveOriginYRange, setPerspectiveOriginYRange] = useState({ min: -250, max: 250 });\n    const [tableRotateRange, setTableRotateRange] = useState({ min: 0, max: 90 });\n    const [tableZRange, setTableZRange] = useState({ min: -100, max: 100 });\n\n    const [perspective, setPerspective] = useState(1);\n    const [perspectiveOriginY, setPerspectiveOriginY] = useState(0);\n    const [tableRotate, setTableRotate] = useState(0);\n    const [tableZ, setTableZ] = useState(1);\n\n    const onSlidePerspective = useCallback((percentage: number) => {\n        setPerspective((perspectiveRange.max - perspectiveRange.min) * percentage + perspectiveRange.min);\n    }, [perspectiveRange]);\n\n    const onSlidePerspectiveOriginY = useCallback((percentage: number) => {\n        setPerspectiveOriginY((perspectiveOriginYRange.max - perspectiveOriginYRange.min) * percentage + perspectiveOriginYRange.min);\n    }, [perspectiveOriginYRange]);\n\n    const onSlideTableRotate = useCallback((percentage: number) => {\n        setTableRotate((tableRotateRange.max - tableRotateRange.min) * percentage + tableRotateRange.min);\n    }, [tableRotateRange]);\n\n    const onSlideTableZ = useCallback((percentage: number) => {\n        setTableZ((tableZRange.max - tableZRange.min) * percentage + tableZRange.min);\n    }, [tableZRange]);\n\n    return (\n        <div id=\"css-3d-page\">\n            <Css3D\n                perspective={ perspective }\n                perspectiveOriginY={ perspectiveOriginY }\n                tableRotateX={ tableRotate }\n                tableZ={ tableZ }\n            />\n            <Css3DVisualize\n                perspective={ perspective }\n                perspectiveOriginY={ perspectiveOriginY }\n                tableRotateX={ tableRotate }\n                tableZ={ tableZ }\n            />\n            <div>perspective</div>\n            <div className=\"css-3d-page-slider\" id=\"perspective-slider\">\n                { perspectiveRange.min }\n                <Slider default={ 0 } sliderBarClass=\"css-3d-page-slider-bar bg_grey_2\" sliderFillClass=\"bg_sec_shade_2\" sliderKnobClass=\"css-3d-page-slider-knob bg_sec_tint\" onChangePercentage={ onSlidePerspective } />\n                { perspectiveRange.max }\n            </div>\n            <div>perspective origin Y</div>\n            <div className=\"css-3d-page-slider\" id=\"perspective-origin-y-slider\">\n                { perspectiveOriginYRange.min }\n                <Slider default={ 0.5 } sliderBarClass=\"css-3d-page-slider-bar bg_grey_2\" sliderFillClass=\"bg_sec_shade_2\" sliderKnobClass=\"css-3d-page-slider-knob bg_sec_tint\" onChangePercentage={ onSlidePerspectiveOriginY } />\n                { perspectiveOriginYRange.max }\n            </div>\n            <div>table rotate</div>\n            <div className=\"css-3d-page-slider\" id=\"table-rotate-slider\">\n                { tableRotateRange.min }\n                <Slider sliderBarClass=\"css-3d-page-slider-bar bg_grey_2\" sliderFillClass=\"bg_sec_shade_2\" sliderKnobClass=\"css-3d-page-slider-knob bg_sec_tint\" onChangePercentage={ onSlideTableRotate } />\n                { tableRotateRange.max }\n            </div>\n            <div>table Z</div>\n            <div className=\"css-3d-page-slider\" id=\"table-z-slider\">\n                { tableZRange.min }\n                <Slider default={ 0.5 } sliderBarClass=\"css-3d-page-slider-bar bg_grey_2\" sliderFillClass=\"bg_sec_shade_2\" sliderKnobClass=\"css-3d-page-slider-knob bg_sec_tint\" onChangePercentage={ onSlideTableZ } />\n                { tableZRange.max }\n            </div>\n        </div>\n    )\n}\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport \"./aStarPage.css\";\n\nconst size = 25;\n\nexport const AStarPage = () => {\n\n    const [start] = useState(47);\n    const [goal] = useState(551);\n    const [gridsLink, setGridsLink] = useState<Array<Array<number>>>([]);\n    // const [hovering, setHovering] = useState(-1);\n    const [blocks, setBlocks] = useState<Array<number>>([]);\n    const [aStarPath, setAStarPath] = useState<Array<number>>([]);\n    useEffect(() => {\n        console.log(blocks);\n        let links: Array<Array<number>> = [];\n        for (let i = 0; i < size * size; i++) {\n            let connection = [];\n            const isBlock = (cell: number) => {\n                return blocks.includes(cell);\n            }\n            if (i - size >= 0 && !isBlock(i - size)) connection.push(i - size); // check upper cell out of bound\n            if (Math.abs(i - 1) % size < i % size && !isBlock(i - 1)) connection.push(i - 1); // check left cell out of bound\n            if ((i + 1) % size > i % size && !isBlock(i + 1)) connection.push(i + 1) //check right cell out of bound\n            if (i + size < size * size && !isBlock(i + size)) connection.push(i + size); // check lower cell out of bound\n            links.push(connection);\n        }\n        setGridsLink(links);\n    }, [blocks]);\n\n    // const hover = useCallback((grid: number) => {\n        // setHovering(grid);\n    // }, []);\n\n    // const unhover = useCallback(() => {\n        // setHovering(-1);\n    // }, []);\n\n    const addBlock = useCallback((i: number) => {\n        if (i !== start && i !== goal) {\n            let newBlocks = blocks.slice();\n            newBlocks.find(block => block === i) !== undefined ?\n                newBlocks.splice(newBlocks.findIndex(block => block === i), 1) :\n                newBlocks.push(i);\n            setBlocks(newBlocks);\n        }\n    }, [start, goal, blocks])\n\n    const aStarProcessedPath = useMemo(() => {\n\n        if (gridsLink.length === 0) return [];\n\n        const calculateCostFrom = (goalCell: number, currentCell: number) => {\n            const goal = [goalCell % size, Math.floor(goalCell / size)];\n            const current = [currentCell % size, Math.floor(currentCell / size)];\n            return Math.abs(goal[0] - current[0]) + Math.abs(goal[1] - current[1]);\n        }\n\n        interface OpenCellInfo {\n            cell: number,\n            costTo: number, // g\n            costFrom: number //h\n            prevCell: number\n        }\n        interface ClosedCellInfo {\n            cell: number,\n            prevCell: number\n        }\n        let openSet: Array<OpenCellInfo> = [{ cell: start, costTo: 0, costFrom: calculateCostFrom(goal, start), prevCell: -1}];\n        let closedSet: Array<ClosedCellInfo> = [];\n        while (openSet.length > 0) {\n            let smallestCost = openSet[0].costFrom + openSet[0].costTo;\n            let smallestCostSet = openSet.filter(cellInfo => cellInfo.costFrom + cellInfo.costTo === smallestCost);\n            let randomIndex = Math.floor(Math.random() * smallestCostSet.length);\n            let currentCell = openSet.splice(randomIndex, 1)[0] as OpenCellInfo; // shift random element sorted with smallest total cost\n            closedSet.unshift({ cell: currentCell.cell, prevCell: currentCell.prevCell })\n            if (currentCell.cell === goal) return closedSet;\n            gridsLink[currentCell.cell].filter(neighbour => !closedSet.find(cellInfo => cellInfo.cell === neighbour)).forEach(neighbour => {\n                let costToNeighbour = currentCell.costTo + 1; // each path cost 1;\n                let neighbourCellInfo = openSet.find(cellInfo => cellInfo.cell === neighbour);\n                if (!neighbourCellInfo || costToNeighbour < neighbourCellInfo.costTo) {\n                    neighbourCellInfo ?\n                        Object.assign(neighbourCellInfo, { costTo: costToNeighbour, prevCell: currentCell.cell }) :\n                        openSet.unshift({ cell: neighbour, costTo: costToNeighbour, costFrom: calculateCostFrom(goal, neighbour), prevCell: currentCell.cell})\n                }\n            })\n            openSet.sort((cellInfoA, cellInfoB) => (cellInfoA.costTo + cellInfoA.costFrom) - (cellInfoB.costTo + cellInfoB.costFrom))\n        }\n        return [];\n    }, [gridsLink, start, goal]);\n\n    useEffect(() => {\n        try {\n            if (aStarProcessedPath.length === 0) return;\n            let path = [];\n            path.push(aStarProcessedPath[0].cell);\n            let prevCell = aStarProcessedPath[0].prevCell;\n            while (prevCell !== -1) {\n                let prevCellInfo = aStarProcessedPath.find(cell => cell.cell === prevCell);\n                path.push(prevCellInfo!.cell);\n                prevCell = prevCellInfo!.prevCell;\n            }\n            setAStarPath(path)\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }, [aStarProcessedPath])\n\n    const checkClass = useCallback((grid: number) => {\n        let className = \"a-star-cell\";\n        if (start === grid || goal === grid) {\n            className += \"-end\";\n            return className;\n        }\n        if (blocks.includes(grid)) {\n            className += \"-block\";\n            return className;\n        }\n        if (aStarProcessedPath.find(cell => cell.cell === grid)) className += \"-processed\";\n        if (aStarPath.find(cell => cell === grid)) className += \"-path\";\n        return className;\n    }, [gridsLink, aStarProcessedPath, aStarPath]);\n\n    return (\n        <div id=\"a-star-page\">\n            <div id=\"a-star-container\" style={ { gridTemplateColumns: `repeat(${size}, 1fr)`, gridTemplateRows: `repeat(${size}, 1fr)` } }>\n                {\n                    Array(size * size).fill(\"\").map((_e, i) => <div className={ checkClass(i) } key={ i } onClick={ addBlock.bind(AStarPage, i) } >{ /*`${i}`.padStart((size * size - 1).toString().length, \"0\")*/ }</div>)\n                }\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\n\nimport \"./calendar.css\";\n\nconst WEEKDAYS: Array<number> = Array.from({ length: 7 }, (_value, i) => i);\n\nexport const Calendar = (props: { calendarIndex: number, calendar: Date, selectedDays: Array<Date>, onChangeMonth: React.MouseEventHandler<HTMLDivElement>, onChangeSelectedDay: Function }) => {\n    let year = props.calendar.getFullYear();\n    let month = props.calendar.getMonth();\n    let today: Date = new Date();\n    today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n\n    let daysInMonth: number = new Date(year, month + 1, 0).getDate(); // month + 1 = next month, date 0 = previous date\n    let firstDayInWeek: number = props.calendar.getDay();\n\n    let generatePrecedingNodes = () => {\n        return Array.from({ length: firstDayInWeek }, _value => _value).map(_precede => <div className={`calendar-node`} />)\n    }\n\n    let generateDays = () => {\n        return Array.from({ length: daysInMonth }, (_value, i) => i).map(day => {\n            let nodeDate: Date = new Date(year, month, day + 1);\n            let nodeClass: string = \"calendar-node\";\n            let textClass: string = \"calendar-node-text\";\n\n            let selectedDaysValue: Array<number> = props.selectedDays.map(days => days.valueOf())\n            let nodeSelectedIndex: number = selectedDaysValue.indexOf(nodeDate.valueOf()); // node date index in selected days\n\n            if (nodeDate >= today) nodeClass += \" cursor-button color_grey_1\"; // can click\n            if (nodeDate > props.selectedDays[0] && nodeDate < props.selectedDays[1]) nodeClass += \" bg_sec_tint\";\n            else if (nodeSelectedIndex !== -1) { // cannot directly compare two dates\n                if (!selectedDaysValue.every(value => value === nodeDate.valueOf())) nodeClass += ` calendar-node-selected-${nodeSelectedIndex}`;\n                textClass += \" calendar-node-text-selected bg_sec_shade_2 color_white\";\n            }\n            return (\n                <div className={nodeClass} onClick={() => props.onChangeSelectedDay(nodeDate)}>\n                    <div className={textClass}>{day + 1}</div>\n                </div>\n            )}\n        )\n    }\n\n    return (\n        <div className=\"calendar bg_white no_highlight\">\n            <div className=\"calendar-title color_prim\">\n                {props.calendarIndex === 0 && new Date(year, month).valueOf() > new Date(today.getFullYear(), today.getMonth()).valueOf() ? <div className=\"cursor_button icon_left_arrow\" onClick={ props.onChangeMonth} /> : <div />}\n                <div>{`${year}年${month + 1}月`}</div>\n                {props.calendarIndex === 1 ? <div className=\"cursor_button icon_right_arrow\" onClick={ props.onChangeMonth } /> : <div />}\n            </div>\n            <div className=\"calendar-grid color_grey_2\">\n                { WEEKDAYS.map(weekday => <div className=\"calendar-node calendar-node-text color_prim\">{ weekday }</div>) }\n                { generatePrecedingNodes() }\n                { generateDays() }\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\n\nimport \"./calendar.css\";\nimport \"./calendarPage.css\";\nimport { Calendar } from \"./calender\";\n\nexport class CalendarPage extends React.Component<{}, { date: Date }> {\n    state = {\n        date: new Date()\n    }\n\n    onChangeDate(date: Date) {\n        this.setState({ date: date });\n    }\n\n    render() {\n        let today = new Date();\n        today = new Date(today.getFullYear(), today.getMonth(), today.getDate());\n        return (\n            <div id=\"calendar-page\">\n                <div className=\"f_24\">Calendar</div>\n                <div className=\"f_16\"></div>\n                <div id=\"calendar-page-calendar\">\n                    <Calendar calendarIndex={ 1 } calendar={ new Date(today.getFullYear(), today.getMonth()) } selectedDays={ [this.state.date, this.state.date] } onChangeMonth={ () => {} } onChangeSelectedDay={ this.onChangeDate.bind(this) } />\n                </div>\n            </div>\n        )\n    }\n}\n","import \"./snakePage.css\";\nimport { Snake } from \"./snake\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useLastKeyPress } from \"../../hooks/useLastKeyPress\";\nimport { useKeyPress } from \"../../hooks/useKeyPress\";\n\n\nexport type PointType = [number, number];\nexport type BodyType = [PointType, PointType];\nexport type SnakeType = Array<BodyType>;\nexport enum DIRECTION {\n    UP = \"up\",\n    DOWN = \"down\",\n    LEFT = \"left\",\n    RIGHT = \"right\"\n}\n\nexport const SnakePage = () => {\n\n    const cloneArray = useCallback(function <T extends SnakeType | BodyType | PointType>(originalArr: T) {\n        return JSON.parse(JSON.stringify(originalArr)) as T;\n    }, [])\n\n    const snakeRef = useRef<SnakeType>([]);\n    const [snake, setSnake] = useState(cloneArray(snakeRef.current))\n\n    const directionRef = useRef(DIRECTION.RIGHT);\n    const [direction, setDirection] = useState(directionRef.current);\n\n    const targetRef = useRef<PointType>();\n    const [target, setTarget] = useState(targetRef.current);\n\n    const keyPressing = useLastKeyPress([\"w\", \"a\", \"s\", \"d\"]);\n    const start = useKeyPress(\" \");\n    const stop = useKeyPress(\"Enter\");\n    const restart = useKeyPress(\"r\");\n    const gameInterval = useRef(-1);\n\n    const scoreRef = useRef(0)\n    const [score, setScore] = useState(scoreRef.current);\n    const speedRef = useRef(5);\n\n    const initSnake = () => {\n        let newSnake: SnakeType = [];\n        newSnake.push([[-1, -1], [10, 10]]);\n        newSnake.push([[10, 10], [10, 9]]);\n        newSnake.push([[10, 9], [9, 9]]);\n        newSnake.push([[9, 9], [9, 10]]);\n        newSnake.push([[9, 10], [8, 10]]);\n        snakeRef.current = newSnake;\n        setSnake(cloneArray(snakeRef.current));\n    }\n\n    useEffect(initSnake, []);\n\n    useEffect(() => {\n        switch (keyPressing) {\n            case \"w\":\n                if (direction !== DIRECTION.DOWN) directionRef.current = DIRECTION.UP;\n            break;\n            case \"a\":\n                if (direction !== DIRECTION.RIGHT) directionRef.current = DIRECTION.LEFT;\n            break;\n            case \"s\":\n                if (direction !== DIRECTION.UP) directionRef.current = DIRECTION.DOWN;\n            break;\n            case \"d\":\n                if (direction !== DIRECTION.LEFT) directionRef.current = DIRECTION.RIGHT;\n            break;\n        }\n    }, [keyPressing]);\n\n    useEffect(() => {\n        if (start && gameInterval.current === -1) {\n            generateTarget();\n            startGame(speedRef.current)\n        }\n    }, [start]);\n\n    useEffect(() => {\n        if (target) {\n            if (Math.ceil(score / 10) > speedRef.current) {\n                speedRef.current = Math.ceil(score / 10);\n                startGame(speedRef.current);\n            }\n        }\n    }, [score])\n\n    useEffect(() => {\n        stop && stopGame();\n    }, [stop]);\n\n    useEffect(() => {\n        if (restart) {\n            stopGame();\n            initSnake();\n            directionRef.current = DIRECTION.RIGHT;\n            setDirection(directionRef.current);\n            scoreRef.current = 0;\n            setScore(scoreRef.current);\n            targetRef.current = undefined;\n            setTarget(targetRef.current);\n        }\n    }, [restart]);\n\n    const startGame = (speed: number) => { // speed = number of grid per second\n        clearInterval(gameInterval.current);\n        gameInterval.current = window.setInterval(() => {\n            move();\n        }, 1000 / speed);\n    }\n\n    const stopGame = () => {\n        console.log(\"stop game\");\n        clearInterval(gameInterval.current);\n        gameInterval.current = -1;\n    }\n\n    const move = () => {\n        let newSnake: SnakeType = cloneArray(snakeRef.current);\n        newSnake.forEach((body, i) => {\n            if (body[0].every(value => value === -1)) { // head\n                switch (directionRef.current) {\n                    case DIRECTION.UP:\n                        body[1][0] -= 1;\n                    break;\n                    case DIRECTION.DOWN:\n                        body[1][0] += 1;\n                    break;\n                    case DIRECTION.LEFT:\n                        body[1][1] -= 1;\n                    break;\n                    case DIRECTION.RIGHT:\n                        body[1][1] += 1;\n                    break;\n                }\n            }\n            else { // body\n                body[1] = cloneArray(body[0]);\n                body[0] = cloneArray(newSnake[i - 1][1]);\n            }\n        })\n        if (checkCollision(newSnake)) {\n            alert(\"Game End!\");\n            stopGame();\n            return;\n        }\n        if (checkEatTarget(newSnake)) {\n            scoreRef.current++\n            setScore(scoreRef.current);\n            newSnake = cloneArray(snakeRef.current);\n            newSnake.unshift([[-1, -1], targetRef.current!]);\n            newSnake[1][0] = cloneArray(newSnake[0][1]);\n            generateTarget();\n        }\n        snakeRef.current = newSnake;\n        setSnake(newSnake);\n        setDirection(directionRef.current);\n    }\n\n    const checkCollision = (snake: SnakeType) => {\n        let head = snake[0][1];\n\n        // collide wall\n        if (head[0] < 0 || head[0] >= 20 || head[1] < 0 || head[1] >= 20) return true;\n\n        // collide body\n        if (snake.filter(body => head.every((value, i) => value === body[1][i])).length > 1) return true;\n\n        return false;\n    }\n\n    const generateTarget = () => {\n        let newTarget: PointType = [-1, -1];\n        do {\n            newTarget[0] = Math.floor(Math.random() * (20 - 0) + 0);\n            newTarget[1] = Math.floor(Math.random() * (20 - 0) + 0);\n        } while (snakeRef.current.some(body => newTarget.every((value, i) => value === body[1][i])));\n        targetRef.current = newTarget\n        setTarget(newTarget);\n    }\n\n    const checkEatTarget = (snake: SnakeType) => {\n        let head = snake[0][1];\n        if (head.every((value, i) => value === targetRef.current![i])) return true;\n    }\n\n    return (\n        <div id=\"snake-page\">\n            <h1>Snake</h1>\n            <br />\n            <h5>Press Space Bar to start. Press Enter to Stop. Use WASD to navigate.</h5>\n            <br />\n            <div>Score: { score }</div>\n            <br />\n            <Snake col={ 20 } row={ 20 } snake={ snake } direction={ direction } target={ target }/>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { ColorPicker } from \"./colorPicker\";\nimport \"./colorPickerPage.css\";\n\nexport class ColorPickerPage extends React.Component<{}, { backgroundColor: string }> {\n    state = {\n        backgroundColor: \"#FFFFFF\"\n    }\n\n    onChangeColor(color: string) {\n        this.setState({ backgroundColor: color});\n    }\n\n    render() {\n        return (\n            <div id=\"color-picker-page\" style={ { backgroundColor: `${this.state.backgroundColor}`} }>\n                <div className=\"f_24\">Color Picker</div>\n                <div className=\"f_16\">{ this.state.backgroundColor}</div>\n                <ColorPicker size={ 500 } onChangeColor={ this.onChangeColor.bind(this) }/>\n            </div>\n        )\n    }\n}\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./home.css\";\n\nexport const Home = (props: {  }) => {\n    const [showList, setShowList] = useState(false);\n    return (\n        <div id=\"home\">\n            <div className=\"f_32 l_40 text_center\">Welcome to the POTATO SHOWCASE!</div>\n            <div id=\"home-choice\">\n                <div id={ `home-choice-selected${showList ? \"-opened\" : \"\"}` } className=\"text_center cursor_button\" onClick={ () => setShowList(!showList) }>Select demo</div>\n                <ul style={ { visibility: !showList ? \"hidden\" : \"visible\" } }>\n                    <Link to=\"/showcase/color-picker\"><li className=\"cursor_button\">Color Picker</li></Link>\n                    <Link to=\"/showcase/slider\"><li className=\"cursor_button\">Slider</li></Link>\n                    <Link to=\"/showcase/interval-slider\"><li className=\"cursor_button\">Interval Slider</li></Link>\n                    <Link to=\"/showcase/range-slider\"><li className=\"cursor_button\">Range Slider</li></Link>\n                    <Link to=\"/showcase/range-interval-slider\"><li className=\"cursor_button\">Range Interval Slider</li></Link>\n                    <Link to=\"/showcase/calendar\"><li className=\"cursor_button\">Calendar</li></Link>\n                    <Link to=\"/showcase/yahtzee\"><li className=\"cursor_button\">Yahtzee</li></Link>\n                    <Link to=\"/showcase/snake\"><li className=\"cursor_button\">Snake</li></Link>\n                    <Link to=\"/showcase/timer\"><li className=\"cursor_button\">Accurate Timer</li></Link>\n                    <Link to=\"/showcase/a-star\"><li className=\"cursor_button\">A* Algorithm</li></Link>\n                    <Link to=\"/showcase/3d-css\"><li className=\"cursor_button\">3D CSS</li></Link>\n                </ul>\n            </div>\n        </div>\n    )\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport \"./intervalSlider.css\";\n\nexport const IntervalSlider = (props: { intervals: number , sliderBarClass: string, sliderFillClass: string, sliderKnobClass: string, onChangePercentage: Function }) => {\n    let sliderRef = useRef<HTMLDivElement>(null);\n    let [sliderPos, setSliderPos] = useState(0);\n\n    useEffect(() => {\n        let closest = Math.round(sliderPos * props.intervals);\n        props.onChangePercentage(closest)\n    }, [sliderPos]);\n\n    let changeKnobPos = (pointerPos: [number, number]) => {\n        let rect = sliderRef.current!.getBoundingClientRect(); // get color picker global position\n        let x = pointerPos[0]; // get pointer global position\n        // check overflow\n        if (x < rect.left) x = rect.left;\n        else if (x > rect.right) x = rect.right;\n        let closest = Math.round((x - rect.left) / rect.width * props.intervals);\n        setSliderPos(closest / props.intervals);\n    }\n\n    let onDown = (pos: [number, number], changeKnobPos: Function) => {\n        changeKnobPos(pos);\n        let move = (e: PointerEvent) => changeKnobPos([e.clientX, e.clientY]);\n        let up = () => {\n            window.removeEventListener(\"pointermove\", move);\n            window.removeEventListener(\"pointerup\", up);\n        }\n        window.addEventListener(\"pointermove\", move);\n        window.addEventListener(\"pointerup\", up);\n    }\n\n    return (\n        <div ref={ sliderRef } className=\"interval-slider no_highlight\"\n            onPointerDown={ (e: React.PointerEvent<HTMLDivElement>) => onDown([e.clientX, e.clientY], changeKnobPos) }>\n            <div className={ `interval-slider-bar ${props.sliderBarClass}` }><div className={ `interval-slider-fill ${props.sliderFillClass}` } style={ { width: `${sliderPos * 100}%` } } /></div>\n            <div className=\"interval-slider-position\" style={ { left: `${sliderPos * 100}%` } }>\n                <div className={ `interval-slider-knob ${props.sliderKnobClass}` } />\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { IntervalSlider } from \"./intervalSlider\";\n\nimport \"./intervalSliderPage.css\";\n\nexport class IntervalSliderPage extends React.Component<{}, { number: number }> {\n    state = {\n        number: 0\n    }\n\n    onChangeNumber(number: number) {\n        this.setState({ number: number });\n    }\n\n    render() {\n        return (\n            <div id=\"interval-slider-page\">\n                <div className=\"f_24\">Interval Slider</div>\n                <div className=\"f_16\">{ this.state.number }</div>\n                <div id=\"interval-slider-page-slider\">\n                    <IntervalSlider intervals={ 15 } sliderBarClass=\"interval-slider-page-slider-bar bg_grey_2\" sliderFillClass=\"bg_sec_shade_2\" sliderKnobClass=\"interval-slider-page-slider-knob bg_sec_tint\" onChangePercentage={ this.onChangeNumber.bind(this) } />\n                </div>\n                <div>\n                    knob height follows slider height; slider bar height independent\n                </div>\n            </div>\n        )\n    }\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport \"./rangeIntervalSlider.css\";\n\nexport const RangeIntervalSlider = (props: { intervals: number, barColor: string, fillColor: string, barClass: string, minKnobClass: string, maxKnobClass: string, allowOverlap: boolean, stopOnOverlap: boolean, onChangeMin: Function, onChangeMax: Function }) => {\n    let sliderRef = useRef<HTMLDivElement>(null);\n    let knobRef: [React.RefObject<HTMLDivElement>, React.RefObject<HTMLDivElement>] = [useRef<HTMLDivElement>(null), useRef<HTMLDivElement>(null)];\n    let [minKnobPos, setminKnobPos] = useState(0);\n    let [maxKnobPos, setmaxKnobPos] = useState(1);\n    let [activeKnob, setActiveKnob] = useState(-1); // for setting z-Index\n    let movingKnob = useRef(-1); //no need state, will reset anyway\n\n    useEffect(() => props.onChangeMin(Math.round(minKnobPos * props.intervals)), [minKnobPos]);\n    useEffect(() => props.onChangeMax(Math.round(maxKnobPos * props.intervals)), [maxKnobPos]);\n\n    let float2Decimal = (value: number, decimal: number) => parseFloat(value.toFixed(decimal));\n\n    let changeKnobPos = (pointerPos: [number, number]) => {\n        let rect = sliderRef.current!.getBoundingClientRect(); // get color picker global position\n        let x = pointerPos[0]; // get pointer global position\n        // check overflow\n        if (x < rect.left) x = rect.left;\n        else if (x > rect.right) x = rect.right;\n        let newPos = (x - rect.left) / rect.width;\n        let closest = Math.round(newPos * props.intervals) / props.intervals;\n        let otherKnob = (movingKnob.current + 1) % 2;\n        let otherKnobRect = knobRef[otherKnob].current!.getBoundingClientRect();\n        let otherKnobPos = (otherKnobRect.left - rect.left) / rect.width;\n        let setKnobPos: React.Dispatch<React.SetStateAction<number>> = movingKnob.current === 0 ? setminKnobPos : setmaxKnobPos;\n        let changeKnob = (otherKnob: number) => {\n            movingKnob.current = otherKnob; // change current knob to other knob\n            setActiveKnob(otherKnob);\n            return movingKnob.current === 0 ? setminKnobPos : setmaxKnobPos;\n        };\n        if (props.allowOverlap) {\n            if ((movingKnob.current === 0 && x > otherKnobRect.left) || (movingKnob.current === 1 && x < otherKnobRect.left)) {\n                setKnobPos(float2Decimal(otherKnobPos, 4)); // set current knob position to exact same as other knob first\n                if (props.stopOnOverlap) return;\n                setKnobPos = changeKnob(otherKnob);\n            }\n        }\n        else {\n            let movingKnobValue = Math.round(newPos * props.intervals);\n            let otherKnobValue = Math.round(otherKnobPos * props.intervals);\n            if ((movingKnob.current === 0 && movingKnobValue >= otherKnobValue) || (movingKnob.current === 1 && movingKnobValue <= otherKnobValue)) {\n                if (props.stopOnOverlap) return;\n                setKnobPos = changeKnob(otherKnob);\n            }\n        }\n        setKnobPos(float2Decimal(closest, 4));\n    }\n\n    let onDown = (pos: [number, number], changeKnobPos: Function) => {\n        let rect = sliderRef.current!.getBoundingClientRect(); // get color picker global position\n        let sliderPos = (pos[0] - rect.left) / rect.width;\n        movingKnob.current = sliderPos < minKnobPos || Math.abs(sliderPos - minKnobPos) < Math.abs(sliderPos - maxKnobPos) ? 0 : 1;\n        setActiveKnob(movingKnob.current);\n        changeKnobPos(pos);\n        let move = (e: PointerEvent) => changeKnobPos([e.clientX, e.clientY]);\n        let up = () => {\n            movingKnob.current = -1;\n            setActiveKnob(-1);\n            window.removeEventListener(\"pointermove\", move);\n            window.removeEventListener(\"pointerup\", up);\n        }\n        window.addEventListener(\"pointermove\", move);\n        window.addEventListener(\"pointerup\", up);\n    }\n\n    return (\n        <div ref={ sliderRef } className=\"range-interval-slider no_highlight\"\n            onPointerDown={ (e: React.PointerEvent<HTMLDivElement>) => onDown([e.clientX, e.clientY], changeKnobPos) }>\n            <div className={ `range-interval-slider-bar ${props.barClass}` }\n                style={ {\n                    background: `linear-gradient(to right,\n                        ${props.barColor} ${minKnobPos * 100}%,\n                        ${props.fillColor} ${minKnobPos * 100}%,\n                        ${props.fillColor} ${maxKnobPos * 100}%,\n                        ${props.barColor} ${maxKnobPos * 100}%,\n                        ${props.barColor})`\n                } }\n            />\n            <div ref={ knobRef[0] } className=\"range-interval-slider-position\" style={ { left: `${minKnobPos * 100}%`, zIndex: activeKnob === 0 ? 1 : 0 } }>\n                <div className={ `range-interval-slider-knob ${props.minKnobClass}` } />\n            </div>\n            <div ref={ knobRef[1] } className=\"range-interval-slider-position\" style={ { left: `${maxKnobPos * 100}%`, zIndex: activeKnob === 1 ? 1 : 0 } }>\n                <div className={ `range-interval-slider-knob ${props.maxKnobClass}` } />\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { RangeIntervalSlider } from \"./rangeIntervalSlider\";\n\nimport \"./rangeIntervalSliderPage.css\";\n\nexport class RangeIntervalSliderPage extends React.Component<{}, { min: number, max: number }> {\n    state = {\n        min: 0,\n        max: 1,\n    }\n\n    onChangeMin(number: number) {\n        this.setState({ min: number });\n    }\n    onChangeMax(number: number) {\n        this.setState({ max: number });\n    }\n\n    render() {\n        return (\n            <div id=\"range-interval-slider-page\">\n                <div className=\"f_24\">Range Interval Slider</div>\n                <div className=\"f_16\">{ this.state.min } - { this.state.max }</div>\n                <div id=\"range-interval-slider-page-slider\">\n                    <RangeIntervalSlider\n                        intervals = { 17 }\n                        barColor=\"#C1C9CD\"\n                        fillColor=\"#927DA4\"\n                        barClass=\"range-interval-slider-page-slider-bar\"\n                        minKnobClass=\"range-interval-slider-page-slider-knob bg_red\"\n                        maxKnobClass=\"range-interval-slider-page-slider-knob bg_blue\"\n                        allowOverlap={ false }\n                        stopOnOverlap={ true }\n                        onChangeMin={ this.onChangeMin.bind(this) }\n                        onChangeMax={ this.onChangeMax.bind(this) }\n                    />\n                </div>\n                <div>knob height follows slider height; slider bar height independent</div>\n                <div>color style separated from class</div>\n            </div>\n        )\n    }\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport \"./rangeSlider.css\";\n\nexport const RangeSlider = (props: { barColor: string, fillColor: string, barClass: string, minKnobClass: string, maxKnobClass: string, stopOnOverlap: boolean, onChangeMinPercentage: Function, onChangeMaxPercentage: Function }) => {\n    let sliderRef = useRef<HTMLDivElement>(null);\n    let knobRef: [React.RefObject<HTMLDivElement>, React.RefObject<HTMLDivElement>] = [useRef<HTMLDivElement>(null), useRef<HTMLDivElement>(null)];\n    let [minKnobPos, setminKnobPos] = useState(0);\n    let [maxKnobPos, setmaxKnobPos] = useState(1);\n    let [activeKnob, setActiveKnob] = useState(-1); // for setting z-Index\n    let movingKnob = useRef(-1); //no need state, will reset anyway\n\n    useEffect(() => props.onChangeMinPercentage(minKnobPos), [minKnobPos]);\n    useEffect(() => props.onChangeMaxPercentage(maxKnobPos), [maxKnobPos]);\n\n    let float2Decimal = (value: number, decimal: number) => parseFloat(value.toFixed(decimal));\n\n    let changeKnobPos = (pointerPos: [number, number]) => {\n        let rect = sliderRef.current!.getBoundingClientRect(); // get color picker global position\n        let x = pointerPos[0]; // get pointer global position\n        // check overflow\n        if (x < rect.left) x = rect.left;\n        else if (x > rect.right) x = rect.right;\n        let newPos = (x - rect.left) / rect.width;\n        let otherKnob = (movingKnob.current + 1) % 2;\n        let otherKnobRect = knobRef[otherKnob].current!.getBoundingClientRect();\n        let setKnobPos: React.Dispatch<React.SetStateAction<number>> = movingKnob.current === 0 ? setminKnobPos : setmaxKnobPos;\n        if ((movingKnob.current === 0 && x > otherKnobRect.left) || (movingKnob.current === 1 && x < otherKnobRect.left)) {\n            let otherKnobPos = (otherKnobRect.left - rect.left) / rect.width;\n            setKnobPos(float2Decimal(otherKnobPos, 4)); // set current knob position to exact same as other knob first\n            if (props.stopOnOverlap) return;\n            movingKnob.current = otherKnob; // change current knob to other knob\n            setActiveKnob(otherKnob);\n            setKnobPos = movingKnob.current === 0 ? setminKnobPos : setmaxKnobPos;\n        }\n        setKnobPos(float2Decimal(newPos, 4));\n    }\n\n    let onDown = (pos: [number, number], changeKnobPos: Function) => {\n        let rect = sliderRef.current!.getBoundingClientRect(); // get color picker global position\n        let sliderPos = (pos[0] - rect.left) / rect.width;\n        movingKnob.current = sliderPos < minKnobPos || Math.abs(sliderPos - minKnobPos) < Math.abs(sliderPos - maxKnobPos) ? 0 : 1;\n        setActiveKnob(movingKnob.current);\n        changeKnobPos(pos);\n        let move = (e: PointerEvent) => changeKnobPos([e.clientX, e.clientY]);\n        let up = () => {\n            movingKnob.current = -1;\n            setActiveKnob(-1);\n            window.removeEventListener(\"pointermove\", move);\n            window.removeEventListener(\"pointerup\", up);\n        }\n        window.addEventListener(\"pointermove\", move);\n        window.addEventListener(\"pointerup\", up);\n    }\n\n    return (\n        <div ref={ sliderRef } className=\"range-slider no_highlight\"\n            onPointerDown={ (e: React.PointerEvent<HTMLDivElement>) => onDown([e.clientX, e.clientY], changeKnobPos) }>\n            <div className={ `range-slider-bar ${props.barClass}` }\n                style={ {\n                    background: `linear-gradient(to right,\n                        ${props.barColor} ${minKnobPos * 100}%,\n                        ${props.fillColor} ${minKnobPos * 100}%,\n                        ${props.fillColor} ${maxKnobPos * 100}%,\n                        ${props.barColor} ${maxKnobPos * 100}%,\n                        ${props.barColor})`\n                } }\n            />\n            <div ref={ knobRef[0] } className=\"range-slider-position\" style={ { left: `${minKnobPos * 100}%`, zIndex: activeKnob === 0 ? 1 : 0 } }>\n                <div className={ `range-silder-knob ${props.minKnobClass}` } />\n            </div>\n            <div ref={ knobRef[1] } className=\"range-slider-position\" style={ { left: `${maxKnobPos * 100}%`, zIndex: activeKnob === 1 ? 1 : 0 } }>\n                <div className={ `range-silder-knob ${props.maxKnobClass}` } />\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\nimport { RangeSlider } from \"./rangeSlider\";\n\nimport \"./rangeSliderPage.css\";\n\nexport class RangeSliderPage extends React.Component<{}, { minPercentage: number, maxPercentage: number }> {\n    state = {\n        minPercentage: 0,\n        maxPercentage: 1\n    }\n\n    onChangeMinPercentage(percentage: number) {\n        this.setState({ minPercentage: percentage });\n    }\n    onChangeMaxPercentage(percentage: number) {\n        this.setState({ maxPercentage: percentage });\n    }\n\n    render() {\n        return (\n            <div id=\"range-slider-page\">\n                <div className=\"f_24\">Range Slider</div>\n                <div className=\"f_16\">{ this.state.minPercentage } - { this.state.maxPercentage }</div>\n                <div id=\"range-slider-page-slider\">\n                    <RangeSlider\n                        barColor=\"#C1C9CD\"\n                        fillColor=\"#927DA4\"\n                        barClass=\"range-slider-page-slider-bar\"\n                        minKnobClass=\"range-slider-page-slider-knob bg_red\"\n                        maxKnobClass=\"range-slider-page-slider-knob bg_blue\"\n                        stopOnOverlap={ true }\n                        onChangeMinPercentage={ this.onChangeMinPercentage.bind(this) }\n                        onChangeMaxPercentage={ this.onChangeMaxPercentage.bind(this) }\n                    />\n                </div>\n                <div>knob height follows slider height; slider bar height independent</div>\n                <div>color style separated from class</div>\n            </div>\n        )\n    }\n}\n","import React from \"react\";\nimport { Slider } from \"./slider\";\n\nimport \"./sliderPage.css\";\n\nexport class SliderPage extends React.Component<{}, { percentage: number }> {\n    state = {\n        percentage: 0\n    }\n\n    onChangePercentage(percentage: number) {\n        this.setState({ percentage: percentage});\n    }\n\n    render() {\n        return (\n            <div id=\"slider-page\">\n                <div className=\"f_24\">Slider</div>\n                <div className=\"f_16\">{ this.state.percentage }</div>\n                <div id=\"slider-page-slider\">\n                    <Slider sliderBarClass=\"slider-page-slider-bar bg_grey_2\" sliderFillClass=\"bg_sec_shade_2\" sliderKnobClass=\"css-3d-page-slider-knob bg_sec_tint\" onChangePercentage={ this.onChangePercentage.bind(this) } />\n                </div>\n                <div>\n                    knob height follows slider height; slider bar height independent\n                </div>\n            </div>\n        )\n    }\n}\n","import \"./snake.css\";\nimport { BodyType, DIRECTION, PointType, SnakeType } from \"./snakePage\";\n\nexport const Snake = (props: { col: number, row: number, snake: SnakeType, direction: DIRECTION, target: undefined | PointType }) => {\n\n    const isBody = (grid: PointType) => {\n        return props.snake.length > 0 && props.snake.find(coor => `${coor[1][0]}_${coor[1][1]}` === `${grid[0]}_${grid[1]}`);\n    }\n\n    const bodyIndex = (grid: PointType) => {\n        return props.snake.length > 0 && props.snake.findIndex(coor => `${coor[1][0]}_${coor[1][1]}` === `${grid[0]}_${grid[1]}`);\n    }\n\n    const isHead = (grid: PointType) => {\n        return props.snake.length > 0 && `${props.snake[0][1][0]}_${props.snake[0][1][1]}` === `${grid[0]}_${grid[1]}` ? `snake-head-${props.direction}` : \"\";\n    }\n\n    const isTarget = (grid: PointType) => {\n        return props.target && props.target.every((value, i) => value === grid[i]);\n    }\n\n    const isBodyCorner = (currIdx: number) => {\n        let className = \"snake-body\"\n        if (currIdx < props.snake.length - 1) {\n            let prevPt = props.snake[currIdx][0];\n            let currPt = props.snake[currIdx][1];\n            let nextPt = props.snake[currIdx + 1][1];\n            if ((prevPt[1] > currPt[1] && currPt[0] < nextPt[0]) || (prevPt[0] > currPt[0] && currPt[1] < nextPt[1])) className += \"-topleft\";\n            else if ((prevPt[1] > currPt[1] && currPt[0] > nextPt[0]) || (prevPt[0] < currPt[0] && currPt[1] < nextPt[1])) className += \"-bottomleft\";\n            else if ((prevPt[1] < currPt[1] && currPt[0] < nextPt[0]) || (prevPt[0] > currPt[0] && currPt[1] > nextPt[1])) className += \"-topright\";\n            else if ((prevPt[1] < currPt[1] && currPt[0] > nextPt[0]) || (prevPt[0] < currPt[0] && currPt[1] > nextPt[1])) className += \"-bottomright\";\n\n        }\n        return className;\n    }\n\n    return (\n        <div id=\"snake\" style={ { gridTemplateColumns: `repeat(${props.col}, 1fr)`, gridTemplateRows: `repeat(${props.row}, 1fr)` } }>\n            { new Array(props.row).fill(null).map((_r, i) =>\n                new Array(props.col).fill(null).map((_c, j) =>\n                    <div key={`${i}_${j}`}>\n                        { isBody([i, j]) && <div key={ `${i}_${j}`} id={ isHead([i, j]) } className={ isBodyCorner(bodyIndex([i, j]) as number) } /> }\n                        { isTarget([i, j]) && <div id={ \"snake-target\" } /> }\n                    </div>\n                )\n            )}\n        </div>\n    )\n}\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport const useKeyPress = (key: string) => {\n    const [keyPressed, setKeyPressed] = useState(false);\n\n    const onDown = useCallback((e: KeyboardEvent) => {\n        e.key === key && setKeyPressed(true);\n    }, [key])\n    const onUp = useCallback((e: KeyboardEvent) => {\n        e.key === key && setKeyPressed(false);\n    }, [key]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", onDown);\n        window.addEventListener(\"keyup\", onUp);\n        return () => {\n            window.removeEventListener(\"keydown\", onDown);\n            window.removeEventListener(\"keyup\", onUp);\n        }\n    }, [onDown, onUp]);\n\n    return keyPressed;\n}\n","export type DiceMap = Map<Point, number>;\nexport type Point = 1 | 2 | 3 | 4 | 5 | 6;\nexport enum YAHTZEE_TYPE {\n    ACES = 1,\n    TWOS = 2,\n    THREES = 3,\n    FOURS = 4,\n    FIVES = 5,\n    SIXS = 6,\n    BONUS = 7,\n    THREE_OF_A_KIND = 11,\n    FOUR_OF_A_KIND = 12,\n    FULL_HOUSE = 13,\n    SMALL_STRAIGHT = 14,\n    LARGE_STRAIGHT = 15,\n    YAHTZEE = 16,\n    CHANCE = 17,\n    YAHTZEE_BONUS = 18\n}\nexport default class YahtzeeUtil {\n    static getDiceMap = (dices: Array<Point>): DiceMap => {\n        let map: DiceMap = new Map();\n        for (let i = 1; i <= 6; i++) {\n            map.set(i as Point, dices.filter(dice => dice === i).length);\n        }\n        return map;\n    }\n\n    static getPoints(dices: DiceMap) {\n        let points: Map<YAHTZEE_TYPE, number> = new Map();\n        for (let i = 1; i <= 6; i++) {\n            points.set(i, dices.get(i as Point)! * i);\n        }\n        return points;\n    }\n\n    static getSum(dices: DiceMap): number {\n        return Array.from(dices.keys()).reduce((sum, point, i) => sum + point * dices.get(i + 1 as Point)!, 0);\n    }\n\n    static getCombination(dices: DiceMap): Map<YAHTZEE_TYPE, number> {\n        let combinations: Map<YAHTZEE_TYPE, number> = new Map();\n        combinations.set(YAHTZEE_TYPE.THREE_OF_A_KIND, this.isThreeOfAKind(dices) ? this.getSum(dices) : 0);\n        combinations.set(YAHTZEE_TYPE.FOUR_OF_A_KIND, this.isFourOfAKind(dices) ? this.getSum(dices) : 0);\n        combinations.set(YAHTZEE_TYPE.FULL_HOUSE, this.isFullHouse(dices) ? 25 : 0);\n        combinations.set(YAHTZEE_TYPE.SMALL_STRAIGHT, this.isSmallStraight(dices) ? 30 : 0);\n        combinations.set(YAHTZEE_TYPE.LARGE_STRAIGHT, this.isLargeStraight(dices) ? 40 : 0);\n        combinations.set(YAHTZEE_TYPE.YAHTZEE, this.isYahtzee(dices) ? 50 : 0);\n        combinations.set(YAHTZEE_TYPE.CHANCE, this.getSum(dices));\n        return combinations;\n    }\n\n    private static isThreeOfAKind(dices: DiceMap) {\n        return Array.from(dices.values()).some(value => value >= 3) // convert values to array and check if any value >= 3\n    }\n\n    private static isFourOfAKind(dices: DiceMap) {\n        return Array.from(dices.values()).some(value => value >= 4) // convert values to array and check if any value >= 4\n    }\n\n    private static isFullHouse(dices: DiceMap) {\n        let counts = Array.from(dices.values());\n        return counts.some(count => count === 3) && counts.some(count => count === 2) // convert values to array and check if any value === 2 and 3\n        // must be only one 3 and one 2\n    }\n\n    private static isSmallStraight(dices: DiceMap) {\n        let counts = Array.from(dices.values());\n        // 1 3 4 5 5 bug\n        return this.isLargeStraight(dices) || (counts.filter(count => count >= 1).length >= 4 && (dices.get(2) !== 0 || dices.get(5) !== 0) && dices.get(3) !== 0 && dices.get(4) !== 0);\n    }\n\n    private static isLargeStraight(dices: DiceMap) {\n        let counts = Array.from(dices.values());\n        return counts.filter(count => count === 1).length === 5 && (dices.get(1) === 0 || dices.get(6) === 0) && dices.get(2) !== 0 && dices.get(5) !== 0;\n    }\n\n    private static isYahtzee(dices: DiceMap) {\n        let counts = Array.from(dices.values());\n        return counts.some(count => count === 5);\n    }\n}\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport const useLastKeyPress = (registerKeys: Array<string>) => {\n    // const keysPressedRef = useRef([\"\"]);\n    const [keyPressed, setKeyPressed] = useState(\"\");\n\n    const onDown = useCallback((e: KeyboardEvent) => {\n        if (registerKeys.includes(e.key) && keyPressed !== e.key) {\n            setKeyPressed(e.key);\n        }\n    }, [registerKeys]);\n\n    const onUp = useCallback((e: KeyboardEvent) => {\n        if (registerKeys.includes(e.key) && keyPressed === e.key) {\n            setKeyPressed(\"\");\n        }\n    }, [registerKeys]);\n\n    useEffect(() => {\n        window.addEventListener(\"keydown\", onDown);\n        window.addEventListener(\"keyup\", onUp);\n        return () => {\n            window.removeEventListener(\"keydown\", onDown);\n            window.removeEventListener(\"keyup\", onUp);\n        }\n    }, [onDown, onUp]);\n\n    return keyPressed;\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport \"./timerPage.css\";\n\nexport const TimerPage = () => {\n\n    const timer1Ref = useRef(0);\n    const timer2Ref = useRef(0);\n\n    const [timer1, setTimer1] = useState(timer1Ref.current);\n    const [timer2, setTimer2] = useState(timer2Ref.current);\n\n    const [startTime] = useState(new Date());\n\n    useEffect(() => {\n        // common method, use setInterva to increase timer by 1\n        // will delay when long time\n        const timer = setInterval(() => {\n            timer1Ref.current += 1;\n            setTimer1(timer1Ref.current);\n        }, 1000);\n        return () => clearInterval(timer);\n    }, []);\n\n    useEffect(() => {\n        // use time difference to calculated timer\n        // will not delay, will be affected if user change time\n        const startTime = new Date();\n        const timer = setInterval(() => {\n            const currentTime = new Date();\n            timer2Ref.current = currentTime.valueOf() - startTime.valueOf();\n            setTimer2(Math.floor(timer2Ref.current / 1000));\n        }, 100);\n        return () => clearInterval(timer);\n    }, [])\n\n    return (\n        <div id=\"timer-page\">\n            <h1>Time start: { `${startTime.getHours()}:${startTime.getMinutes()}:${startTime.getSeconds()}` }</h1>\n            <h1>Inaccurate Timer</h1>\n            <h2>Time passed: { timer1 } seconds</h2>\n            <h1>Accurate Timer</h1>\n            <h2>Time passed: { timer2 } seconds</h2>\n        </div>\n    )\n}\n","import \"./dice.css\";\nimport { Point } from \"./yahtzeeUtil\";\n\nconst Value: Map<Point, Array<number>> = new Map([\n    [1, [4]],\n    [2, [0, 8]],\n    [3, [2, 4, 6]],\n    [4, [0, 2, 6, 8]],\n    [5, [0, 2, 4, 6, 8]],\n    [6, [0, 2, 3, 5, 6, 8]]\n])\n\nexport const Dice = (props: { point: Point, locked: boolean, onClick: Function | undefined }) => {\n    const dot = (red: boolean = false) => {\n        return <div className={ `dot ${red && \"dot-red\"}` } />\n    }\n\n    const point = (value: Point) => {\n        return (\n            <div data-clickable={ `${props.onClick !== undefined}` } className={ `dice ${props.locked && \"dice-locked\"}` } onClick={ () => props.onClick ? props.onClick() : {} }>\n                { new Array(9).fill(null).map((_grid, i) => Value.get(value)!.includes(i) ? dot(value === 1 || value === 4) : <div />)}\n            </div>\n        )\n    }\n    return point(props.point);\n}\n","import \"./yahtzeeTable.css\";\nimport { YAHTZEE_TYPE } from \"./yahtzeeUtil\";\n\nconst upperRows = [\n    { name: \"Aces(1點)\", type: YAHTZEE_TYPE.ACES },\n    { name: \"Twos(2點)\", type: YAHTZEE_TYPE.TWOS },\n    { name: \"Threes(3點)\", type: YAHTZEE_TYPE.THREES },\n    { name: \"Fours(4點)\", type: YAHTZEE_TYPE.FOURS },\n    { name: \"Fives(5點)\", type: YAHTZEE_TYPE.FIVES },\n    { name: \"Sixes(6點)\", type: YAHTZEE_TYPE.SIXS },\n];\n\nconst lowerRows = [\n    { name: \"3 of a Kind (三條)\", type: YAHTZEE_TYPE.THREE_OF_A_KIND },\n    { name: \"4 of a Kind (四條)\", type: YAHTZEE_TYPE.FOUR_OF_A_KIND },\n    { name: \"Full House (葫蘆)\", type: YAHTZEE_TYPE.FULL_HOUSE },\n    { name: \"Small Straight (小順)\", type: YAHTZEE_TYPE.SMALL_STRAIGHT },\n    { name: \"Large Straight (大順)\", type: YAHTZEE_TYPE.LARGE_STRAIGHT },\n    { name: \"YAHTZEE (五條)\", type: YAHTZEE_TYPE.YAHTZEE },\n    { name: \"Chance (機會)\", type: YAHTZEE_TYPE.CHANCE }\n]\n\nexport const YahtzeeTable = (props: { combinations: Map<YAHTZEE_TYPE, number>, onSelectRow: ((key:YAHTZEE_TYPE) => void) | null }) => {\n    const getCombinationValue = (type: YAHTZEE_TYPE) => {\n        return props.combinations.get(type)! === -Infinity ? 0 : props.combinations.get(type);\n    }\n    const getValue = (type: YAHTZEE_TYPE) => {\n        return props.combinations.get(type)!;\n    }\n    const getDisplay = (type: YAHTZEE_TYPE) => {\n        return (props.onSelectRow || (!props.onSelectRow && getValue(type)! < 0)) && getCombinationValue(type) && Math.abs(getCombinationValue(type)!);\n    }\n    const onClick = (type: YAHTZEE_TYPE) => {\n        return props.onSelectRow ? props.onSelectRow!(type) : undefined\n    }\n    return (\n        <div className=\"yahtzee-table\">\n            <table>\n                <tbody>\n                    { upperRows.map(row => (\n                        <tr key={ row.type }>\n                            <th>{ row.name }</th>\n                            <td className={ `yahtzee-table-${props.onSelectRow && getValue(row.type) >= 0 ? \"highlight\" : getValue(row.type) < 0 ? \"fixed\" : \"cell\"}` } onClick={ () => onClick(row.type) }>{ getDisplay(row.type) }</td>\n                        </tr>\n                    ))}\n                    <tr>\n                        <th>Bonus (63+) 加分 (63+)</th>\n                        <td>{ Math.abs(getDisplay(YAHTZEE_TYPE.YAHTZEE_BONUS) as number) || 0 }</td>\n                    </tr>\n                    <tr>\n                        <th>Total of Upper Section (上區總分)</th>\n                        <td>{ Array.from(props.combinations).reduce((prev, currPair) => prev + (currPair[0] < 10 && currPair[1] < 0 ? Math.abs(getDisplay(currPair[0]) || 0) : 0), 0) }</td>\n                    </tr>\n\n                </tbody>\n            </table>\n            <table>\n                <tbody>\n                    { lowerRows.map(row => (\n                        <tr key={ row.type }>\n                            <th>{ row.name }</th>\n                            <td className={ `yahtzee-table-${props.onSelectRow && getValue(row.type) >= 0 ? \"highlight\" : getValue(row.type) < 0 ? \"fixed\" : \"cell\"}` } onClick={ () => onClick(row.type) }>{ getDisplay(row.type) }</td>\n                        </tr>\n                    ))}\n                    <tr>\n                        <th>Total of Lower Section (下區總分)</th>\n                        <td>{ Array.from(props.combinations).reduce((prev, currPair) => prev + (currPair[0] > 10 && currPair[1] < 0 ? Math.abs(getDisplay(currPair[0]) || 0) : 0), 0) }</td>\n                    </tr>\n                </tbody>\n            </table>\n            <table>\n                <tbody>\n                    <tr>\n                        <th>Total (總分)</th>\n                        <td>{ Array.from(props.combinations).reduce((prev, currPair) => prev + (currPair[1] < 0 ? Math.abs(getDisplay(currPair[0]) || 0) : 0), 0) }</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    )\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport { Dice } from \"./dice\";\nimport \"./yahtzeePage.css\";\nimport { YahtzeeTable } from \"./yahtzeeTable\";\nimport YahtzeeUtil, { Point, YAHTZEE_TYPE } from \"./yahtzeeUtil\";\n\nconst rollSpeed = 50;\n\ntype DiceInfo = {\n    value: Point,\n    locked: boolean\n}\n\ntype Combinations = Map<YAHTZEE_TYPE, number>;\n\nconst combinationMap = (): Combinations => (\n    new Map([\n        [YAHTZEE_TYPE.ACES, Infinity],\n        [YAHTZEE_TYPE.TWOS, Infinity],\n        [YAHTZEE_TYPE.THREES, Infinity],\n        [YAHTZEE_TYPE.FOURS, Infinity],\n        [YAHTZEE_TYPE.FIVES, Infinity],\n        [YAHTZEE_TYPE.SIXS, Infinity],\n        [YAHTZEE_TYPE.BONUS, -Infinity],\n        [YAHTZEE_TYPE.THREE_OF_A_KIND, Infinity],\n        [YAHTZEE_TYPE.FOUR_OF_A_KIND, Infinity],\n        [YAHTZEE_TYPE.FULL_HOUSE, Infinity],\n        [YAHTZEE_TYPE.SMALL_STRAIGHT, Infinity],\n        [YAHTZEE_TYPE.LARGE_STRAIGHT, Infinity],\n        [YAHTZEE_TYPE.YAHTZEE, Infinity],\n        [YAHTZEE_TYPE.CHANCE, Infinity],\n        // [YAHTZEE_TYPE., 0],\n        // [YAHTZEE_TYPE., 0],\n\n    ])\n)\n\nexport const YahtzeePage = () => {\n    const rollingDiceRef = useRef<Array<Point>>([]);\n    const [dices, setDices] = useState<Array<DiceInfo>>(rollingDiceRef.current.map(dice => { return { value: dice, locked: false } }));\n    const [combinations, setCombinations] = useState<Combinations>(combinationMap());\n    const [rolling, setRolling] = useState(false);\n    const [rollCount, setRollCount] = useState(0);\n    const [roundRunning, setRoundRunning] = useState(false);\n    const [gameEnd, setGameEnd] = useState(false);\n    const rollingId = useRef(-1);\n\n    useEffect(() => {\n        updateDices([randomDice(), randomDice(), randomDice(), randomDice(), randomDice()]);\n    }, []);\n\n    useEffect(() => {\n        if (dices.length === 0) return;\n        if (rolling) {\n            let id = window.setInterval(() => {\n                let dicesClone = rollingDiceRef.current.slice();\n                updateDices(dicesClone.map((dice, i) => {\n                    let newPoint: Point = dice;\n                    do {\n                        if (!dices[i].locked) newPoint = randomDice();\n                        else break;\n                    } while (newPoint === dice)\n                    return newPoint;\n                }));\n            }, rollSpeed);\n            rollingId.current = id;\n        }\n        else stopRoll();\n    }, [rolling]);\n\n    useEffect(() => {\n        rolling && setRoundRunning(true);\n    }, [rolling]);\n\n    useEffect(() => {\n        if (roundRunning || combinations.get(YAHTZEE_TYPE.BONUS) === -35) return;\n        let upperSum = checkBonus(combinations);\n        if (Math.abs(upperSum) >= 63) {\n            let newCombination = new Map([...combinations]);\n            newCombination.set(YAHTZEE_TYPE.BONUS, -35)\n            setCombinations(newCombination);\n        }\n    }, [combinations, roundRunning]);\n\n    useEffect(() => {\n        if (!gameEnd) {\n            updateDices([randomDice(), randomDice(), randomDice(), randomDice(), randomDice()]);\n            setCombinations(combinationMap());\n            setRollCount(0);\n        }\n    }, [gameEnd]);\n\n    const stopRoll = () => {\n        clearInterval(rollingId.current);\n        rollingId.current = -1;\n        updateDices(rollingDiceRef.current.map((dice, i) => !dices[i].locked ? randomDice() : dice));\n        // updateDices([1,1,1,1,1]);\n        let diceMap = YahtzeeUtil.getDiceMap(rollingDiceRef.current);\n        let newCombination: Combinations = new Map([...YahtzeeUtil.getPoints(diceMap), ...YahtzeeUtil.getCombination(diceMap)])\n        newCombination.forEach((_value, key, map) => {\n            if (combinations.get(key)! < 0) map.set(key, combinations.get(key)!);\n        })\n        newCombination.set(YAHTZEE_TYPE.BONUS, combinations.get(YAHTZEE_TYPE.BONUS)!);\n        setCombinations(newCombination)\n        setRollCount(rollCount + 1);\n    }\n\n    const updateDices = useCallback((newDices: Array<Point>) => {\n        rollingDiceRef.current = newDices.slice();\n        setDices(newDices.map((dice, i) => { return { value: dice, locked: dices[i]?.locked || false } }));\n    }, [rollingDiceRef, dices]);\n\n    const randomDice = (): Point => {\n        return Math.floor(Math.random() * ((6 + 1) - 1) + 1) as Point;\n    }\n\n    const onLockDice = (i: number) => {\n        let dicesClone = dices.slice();\n        dicesClone[i].locked = !dicesClone[i].locked;\n        setDices(dicesClone);\n    }\n\n    const onSelectRow = (key: YAHTZEE_TYPE) => {\n        setRoundRunning(false);\n        let value = combinations.get(key)!\n        if (value < 0) return;\n        let newCombination = new Map([...combinations]);\n        newCombination.set(key, -value || -Infinity);\n        setCombinations(newCombination);\n        setRollCount(0);\n        let dicesClone = [...dices];\n        dicesClone.forEach(dice => dice.locked = false);\n        setDices(dicesClone);\n        if (!Array.from(newCombination).find(pair => pair[1] >= 0)) {\n            alert(\"End game\");\n            setGameEnd(true);\n        }\n    }\n\n    const checkBonus = (combination: Combinations) => {\n        const getValue = (type: YAHTZEE_TYPE) => combination.get(type) === -Infinity ? 0 : combination.get(type)!;\n        return Array.from(combinations).reduce((prev, currPair) => prev + (currPair[0] < 10 && currPair[1] < 0 ? (getValue(currPair[0]) || 0) : 0), 0)\n    }\n\n    return (\n        <div id=\"yahtzee-page\">\n            <h2 className=\"f_24\">Yahtzee</h2>\n            <div id=\"yahtzee-dice-roll\">\n                { dices.map((dice, i) => <Dice key={ i } point={ dice.value } locked={ dice.locked } onClick={ !rolling && rollCount > 0 ? onLockDice.bind(Dice, i) : undefined }/>) }\n            </div>\n            {   !gameEnd ?\n                <div id=\"yahtzee-button\" className=\"no_highlight cursor_button\" onClick={ () => setRolling(rollCount < 3 && !rolling) }>Roll</div> :\n                <div id=\"yahtzee-button\" className=\"no_highlight cursor_button\" onClick={ () => setGameEnd(false) }>Replay</div>\n            }\n            <div id=\"yahtzee-rolls\">\n                { Array(3).fill(undefined).map((_n, i) => <div key={ i } className=\"yahtzee-roll\">{ rollCount > i && <div className=\"yahtzee-roll-count\" /> }</div>)}\n\n            </div>\n            <YahtzeeTable combinations={ combinations } onSelectRow={ rollCount > 0 ? onSelectRow : null } />\n        </div>\n    )\n}\n","import React from 'react';\nimport { BrowserRouter, Route, Routes, useLocation, useNavigate } from \"react-router-dom\";\nimport { Css3DPage } from './components/Css3D/Css3DPage';\nimport { AStarPage } from './components/aStar/aStarPage';\nimport { CalendarPage } from './components/calendar/calendarPage';\nimport { ColorPickerPage } from './components/colorPicker/colorPickerPage';\nimport { Home } from './components/home/home';\nimport { IntervalSliderPage } from './components/intervalSlider/intervalSliderPage';\nimport { RangeIntervalSliderPage } from './components/rangeIntervalSlider/rangeIntervalSliderPage';\nimport { RangeSliderPage } from './components/rangeSlider/rangeSliderPage';\nimport { SliderPage } from './components/slider/sliderPage';\nimport { SnakePage } from './components/snake/snakePage';\nimport { TimerPage } from './components/timer/timerPage';\nimport { YahtzeePage } from './components/yahtzee/yahtzeePage';\n\nexport const App = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    return (\n        <div className=\"App\">\n            { location.pathname !== \"/showcase\" && <div id=\"back\" className=\"cursor_button\" onClick={ () => location.key !== \"default\" ? navigate(-1) : navigate( \"/showcase\", { replace: true }) }>Back</div> }\n            <Routes>\n                <Route path=\"/showcase/color-picker\" element={ <ColorPickerPage /> } />\n                <Route path=\"/showcase/slider\" element={ <SliderPage /> } />\n                <Route path=\"/showcase/interval-slider\" element={ <IntervalSliderPage /> } />\n                <Route path=\"/showcase/range-slider\" element={ <RangeSliderPage /> } />\n                <Route path=\"/showcase/range-interval-slider\" element={ <RangeIntervalSliderPage /> } />\n                <Route path=\"/showcase/calendar\" element={ <CalendarPage /> } />\n                <Route path=\"/showcase/yahtzee\" element={ <YahtzeePage /> } />\n                <Route path=\"/showcase/snake\" element={ <SnakePage /> } />\n                <Route path=\"/showcase/timer\" element={ <TimerPage /> } />\n                <Route path=\"/showcase/a-star\" element={ <AStarPage /> } />\n                <Route path=\"/showcase/3d-css\" element={ <Css3DPage /> } />\n                <Route path=\"/showcase/*\" element={ <Home /> } />\n            </Routes>\n        </div>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\nimport './commonCSS/root.css';\nimport './commonCSS/font.css';\nimport './commonCSS/color.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}